@using ChatApp.Services.ChatBot;
@using ChatApp.Services.ChatBot.Model;

@page "/chat"
@inject IChatBot chatBot

<PageTitle>Chat</PageTitle>

<div style="height:80%">
    <MudPaper Elevation="2">
    @foreach (var iter in history.ToList())
    {
        <MudCard>
            <MudCardContent>
                <MudText Typo="Typo.subtitle2"><b>@iter.Ask</b></MudText>
                <MudText>@iter.Answer</MudText>
                <MudText>@iter.Duration.TotalMilliseconds<nbsp/>ms</MudText>
            </MudCardContent>
        </MudCard>
    }
    </MudPaper>
</div>

<div style="height:20%">
    <MudPaper>
        <MudTextField @bind-Value="prompt" @onkeydown="@Enter" Label="Type your question..." Variant="Variant.Outlined" />
        <MudButton  Variant="Variant.Filled" @onclick="SendPrompt" EndIcon="@Icons.Material.Filled.Send">Send</MudButton>
    </MudPaper>
</div>

@code {
    string prompt = "What is my name and what is my age?";
    string response = string.Empty;
    List<ChatInteraction> history = new List<ChatInteraction>();

    protected override Task OnInitializedAsync()
    {
        chatBot.AnswerReceived += OnAnswerReceived;
        return base.OnInitializedAsync();
    }

    public async Task Enter(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")// Covers: Enter + NumPad Enter + Mobile keyboard Go to(enter)
        {
            await SendPrompt();            
        }
    }

    Task OnAnswerReceived(object sender, ChatInteraction interaction)
    {
        response = interaction.Answer;
        history = chatBot.GetHistory().ToList();

        return Task.CompletedTask;
    }

    async Task SendPrompt()
    {        
        await chatBot.Send(prompt);
        prompt = string.Empty;
        await Task.Delay(1);
        StateHasChanged();
    }
}
