@using ChatApp.Services.ChatBot;
@using ChatApp.Services.ChatBot.Model;

@page "/chat"
@inject IChatBot chatBot

<PageTitle>Chat</PageTitle>

    <MudPaper Elevation="2">
    @foreach (var iter in history.ToList())
    {
        <MudCard>
            <MudCardContent>
                <MudText Typo="Typo.subtitle2"><b>@iter.Ask</b></MudText>
                <MudText>@iter.Answer</MudText>
                <MudText>@iter.Duration.TotalMilliseconds<nbsp/>ms</MudText>
            </MudCardContent>
        </MudCard>
    }
    </MudPaper>

<MudForm>
    <MudPaper>
        <MudTextField @bind-Value="Prompt" Label="Type your question..." Variant="Variant.Outlined" />
        <MudButton Class="ml-auto" Variant="Variant.Filled" @onclick="SendPrompt" EndIcon="@Icons.Material.Filled.Send">Send</MudButton>
        <InputText @bind-Value="Prompt"></InputText>
    </MudPaper>
</MudForm>

@code {    
    public string Prompt { get; set; } = "What is my name and what is my age?";

    string response = string.Empty;
    List<ChatInteraction> history = new List<ChatInteraction>();
    MudForm form;

    protected override Task OnInitializedAsync()
    {
        chatBot.AnswerReceived += OnAnswerReceived;
        return base.OnInitializedAsync();
    }
    
    Task OnAnswerReceived(object sender, ChatInteraction interaction)
    {
        response = interaction.Answer;
        history = chatBot.GetHistory().ToList();        
        Prompt = string.Empty;
        
        StateHasChanged();

        return Task.CompletedTask;
    }

    async Task SendPrompt()
    {        
        await chatBot.Send(Prompt);        
    }
}
